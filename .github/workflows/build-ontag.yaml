name: "Build Latest (when new tag created)"
on:
  push:
    tags:
      - '*'
env:
  YAAGL_VERSION: ${{ github.ref_name }}
permissions:
  contents: "write"
  packages: "write"
  pull-requests: "read"
jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Sophon Build Cache
        id: sophon-build-cache
        uses: actions/cache@v4
        with:
          key: cache-key-${{ hashFiles('build-sophon.sh', 'sophon_server/*') }}
          restore-keys: |
            cache-key-${{ hashFiles('configure.sh') }}
          path: |
            ./sophon_server/build/
            ./sophon_server/.cache/

      - name: Sophon Build
        if: ${{ steps.sophon-build-cache.outputs.cache-hit != 'true' }}
        run: |
          ./build-sophon.sh

      - name: Save Sophon Build Cache
        if: ${{ steps.sophon-build-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache@v4
        with:
          key: cache-key-${{ hashFiles('build-sophon.sh', 'sophon_server/*') }}
          path: |
            ./sophon_server/build/
            ./sophon_server/.cache/

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build app
        run: |
          ./configure.sh
          YAAGL_CHANNEL_CLIENT=hk4ecn node ./build-app.js
          cp dist/Yaagl/resources.neu resources_hk4ecn.neu
          YAAGL_CHANNEL_CLIENT=hk4eos node ./build-app.js
          cp dist/Yaagl/resources.neu resources_hk4eos.neu 
          YAAGL_CHANNEL_CLIENT=bh3glb node ./build-app.js
          cp dist/Yaagl/resources.neu resources_bh3glb.neu
          YAAGL_CHANNEL_CLIENT=hkrpgcn node ./build-app.js
          cp dist/Yaagl/resources.neu resources_hkrpgcn.neu
          YAAGL_CHANNEL_CLIENT=hkrpgos node ./build-app.js
          cp dist/Yaagl/resources.neu resources_hkrpgos.neu
          YAAGL_CHANNEL_CLIENT=napcn node ./build-app.js
          cp dist/Yaagl/resources.neu resources_napcn.neu
          YAAGL_CHANNEL_CLIENT=napos node ./build-app.js
          cp dist/Yaagl/resources.neu resources_napos.neu

      - name: Tar app
        run: |
          tar -zcf Yaagl.app.tar.gz Yaagl.app
          tar -zcf "Yaagl OS.app.tar.gz" "Yaagl OS.app"
          tar -zcf "Yaagl Honkai Global.app.tar.gz" "Yaagl Honkai Global.app"
          tar -zcf "Yaagl HSR.app.tar.gz" "Yaagl HSR.app"
          tar -zcf "Yaagl HSR OS.app.tar.gz" "Yaagl HSR OS.app"
          tar -zcf "Yaagl ZZZ.app.tar.gz" "Yaagl ZZZ.app"
          tar -zcf "Yaagl ZZZ OS.app.tar.gz" "Yaagl ZZZ OS.app"
      - name: Generate prerelease
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          draft: true
          title: "Release ${{ github.ref_name }}"
          files: |
            Yaagl.app.tar.gz
            Yaagl OS.app.tar.gz
            Yaagl Honkai Global.app.tar.gz
            Yaagl HSR.app.tar.gz
            Yaagl HSR OS.app.tar.gz
            Yaagl ZZZ.app.tar.gz
            Yaagl ZZZ OS.app.tar.gz
            resources_hk4ecn.neu
            resources_hk4eos.neu
            resources_bh3glb.neu
            resources_hkrpgcn.neu
            resources_hkrpgos.neu
            resources_napcn.neu
            resources_napos.neu
