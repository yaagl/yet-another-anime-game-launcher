/**
 * why not make this file directly visible?
 * (then the project will be taken down then everybody will be happy :) )
 */

export const CN_UPDATE_URL =
  "https://hyp-api.mihoyo.com/hyp/hyp-connect/api/getGamePackages?launcher_id=jGHBHlcOq1";

export const BILIBILI_UPDATE_URL =
  "https://sdk-static.mihoyo.com/hk4e_cn/mdk/launcher/api/resource?channel_id=14&key=KAtdSsoQ&launcher_id=17";

export const CN_PROGRAM_NAME = "YuanShen";

export const CN_EXECUTABLE = `${CN_PROGRAM_NAME}.exe`;

export const CN_CPS = "pcadbdpz";

export const BILIBILI_CPS = "bilibili";

export const CN_DATA_DIR = `${CN_PROGRAM_NAME}_Data`;

export const CN_ADV_URL =
  "https://hyp-api.mihoyo.com/hyp/hyp-connect/api/getAllGameBasicInfo?launcher_id=jGHBHlcOq1";

export const BILIBILI_ADV_URL =
  "https://sdk-static.mihoyo.com/hk4e_cn/mdk/launcher/api/content?filter_adv=true&key=KAtdSsoQ&launcher_id=17";

export const CN_COMPANY_NAME = "miHoYo";

export const CN_PRODUCT_NAME = "原神";

export const CN_CUSTOM_HOSTS =
  "uspider.yuanshen.com=0.0.0.0;log-upload.mihoyo.com=0.0.0.0;public-data-api.mihoyo.com=0.0.0.0";

export const CN_BLOCK_URL = "dispatchcnglobal.yuanshen.com";

// ----------------------

export const OS_UPDATE_URL =
  "https://sg-hyp-api.hoyoverse.com/hyp/hyp-connect/api/getGamePackages?launcher_id=VYTpXlbWo8";

export const OS_PROGRAM_NAME = "GenshinImpact";

export const OS_DATA_DIR = `${OS_PROGRAM_NAME}_Data`;

export const OS_EXECUTABLE = `${OS_PROGRAM_NAME}.exe`;

export const OS_CPS = `mihoyo`;

export const OS_ADV_URL =
  "https://sg-hyp-api.hoyoverse.com/hyp/hyp-connect/api/getAllGameBasicInfo?launcher_id=VYTpXlbWo8";

export const OS_PRODUCT_NAME = "Genshin Impact";

export const OS_CUSTOM_HOSTS =
  "log-upload-os.hoyoverse.com=0.0.0.0;sg-public-data-api.hoyoverse.com=0.0.0.0;overseauspider.yuanshen.com=0.0.0.0";

export const OS_BLOCK_URL = "dispatchosglobal.yuanshen.com";

// ----------------------

export const DLL1 = "UnityPlayer.dll";

export const DLL2 = "xlua.dll";

export const DLL3 = "mhypbase.dll";

export const ENSURE_HOSTS: [string, string][] = [
  ["uspider.yuanshen.com", "0.0.0.0"],
  ["log-upload.mihoyo.com", "0.0.0.0"],
  ["public-data-api.mihoyo.com", "0.0.0.0"],
  ["log-upload-os.hoyoverse.com", "0.0.0.0"],
  ["sg-public-data-api.hoyoverse.com", "0.0.0.0"],
  ["overseauspider.yuanshen.com", "0.0.0.0"],
  ["globaldp-prod-cn01.juequling.com", "0.0.0.0"],
];

// ----------------------

export const BH3_GLB_UPDATE_URL =
  "https://bh3-launcher.hoyoverse.com/bh3_global/mdk/launcher/api/resource?launcher_id=10&key=dpz65xJ3";

export const BH3_GLB_ADV_URL =
  "https://bh3-launcher.hoyoverse.com/bh3_global/mdk/launcher/api/content?filter_adv=true&launcher_id=10&key=dpz65xJ3";

export const BH3_GLB_PROGRAM_NAME = "BH3";

export const BH3_GLB_DATA_DIR = `${BH3_GLB_PROGRAM_NAME}_Data`;

export const BH3_GLB_EXECUTABLE = `${BH3_GLB_PROGRAM_NAME}.exe`;

export const DLL4 = "BH3Base.dll";

export const FILE1 = "TVMBootstrap.dll";
export const FILE2 = "Generated/tvm_entry_table.dat";
export const FILE3 = "Generated/tvm_allocation_table.dat";

// ----------------------

export const HKRPG_CN_UPDATE_URL = CN_UPDATE_URL;
export const HKRPG_CN_ADV_URL = CN_ADV_URL;
export const HKRPG_CN_CPS = "gw_PC";
export const HKRPG_OS_UPDATE_URL = OS_UPDATE_URL;
export const HKRPG_OS_ADV_URL = OS_ADV_URL;
export const HKRPG_OS_CPS = "hoyoverse_PC";
export const HKRPG_PROGRAM_NAME = "StarRail";
export const HKRPG_DATA_DIR = `${HKRPG_PROGRAM_NAME}_Data`;
export const HKRPG_EXECUTABLE = `${HKRPG_PROGRAM_NAME}.exe`;
export const HKRPG_REMOVED = [
  {
    file: `${HKRPG_DATA_DIR}/Plugins/x86_64/crashreport.exe`,
  },
  {
    file: `${HKRPG_DATA_DIR}/Plugins/x86_64/vulkan-1.dll`,
  },
];
export const DLL5 = "StarRailBase.dll";

export const NAP_CPS = "mihoyo";
export const NAP_PROGRAM_NAME = `ZenlessZoneZero`;
export const NAP_DATA_DIR = `${NAP_PROGRAM_NAME}_Data`;
export const NAP_EXECUTABLE = `${NAP_PROGRAM_NAME}.exe`;
export const NAP_REMOVED = [
  {
    file: `${NAP_DATA_DIR}/Plugins/x86_64/vulkan-1.dll`,
  },
];
